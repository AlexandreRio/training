import "SensorTimer.thingml"
import "Filter.thingml"


datatype String
	@c_type "char *"
	@c_byte_size "2"
	@java_type "String"
	@js_type "String";

thing fragment SensorMsgs {
	// Start the Timer
	message start_periodic_reading(delay : Integer);
	//Instruct to read sensor
	message read();
	// Cancel the Timer
	message reading_cancel();
	// Notification that the timer has expired
	message reading(value : Long);
	// Notification that sensor is online
	message readingJson(value : String);
	// Notification that sensor is online
	message ready();
}

thing Sensor includes TimerMsgs, SensorMsgs, DecoderMsg {

	property delay : Integer 

	provided port sensor_service @public "true" {
		sends reading, ready
		receives start_periodic_reading, reading_cancel, read 
	}
	
	required port sensor_mqtt {
		sends readingJson 		
	}
	
	
	required port timer {
		receives timer_timeout
		sends timer_start, timer_start_interval, timer_cancel
	}
	
	provided port decoder {
		sends decoded
	}
	
	required port filtered {
		receives decoded
	}

	
	
}