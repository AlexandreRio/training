//sample of KevScript configuration
// repo "http://repo1.maven.org/maven2"
// include mvn:org.kevoree.library.java:org.kevoree.library.java.javaNode:release
// include mvn:org.kevoree.library.java:org.kevoree.library.java.ws:release

// create the nodes
add node0 : JavaNode
add node1 : JavaNode
add node2 : JavaNode

// create and add your component (named "myComp") in each node
add node0.myComp : com.softwareag.research.heads.tutorial.MoveMessage
add node1.myComp : com.softwareag.research.heads.tutorial.MoveMessage
add node2.myComp : com.softwareag.research.heads.tutorial.MoveMessage

// set the content of the dictionary attribute 'nodeId' to a unique value for each node.
set node0.myComp.nodeId = 'A'
set node1.myComp.nodeId = 'B'
set node2.myComp.nodeId = 'C'

// add an instance of WSGroup named "sync"
add sync : WSGroup
// set the master node for the group to be the jsNode
set sync.master = 'node0'

// attach your host nodes to the WSGroup group
attach node2 sync
attach node1 sync
attach node0 sync

// add instances of WSChan 
add chan0 : WSChan
add chan1 : WSChan
add chan2 : WSChan

// give the host:port of the broker to the chan
set chan0.host = "localhost"
set chan0.port = "9050"
set chan1.host = "localhost"
set chan1.port = "9050"
set chan2.host = "localhost"
set chan2.port = "9050"


// bind the output port "outQueue" to "chan"
bind node0.myComp.outQueue chan0
bind node1.myComp.outQueue chan1
bind node2.myComp.outQueue chan2

// bind the input port "outQueue" to "chan"
bind node0.myComp.inQueue chan2
bind node1.myComp.inQueue chan0
bind node2.myComp.inQueue chan1
