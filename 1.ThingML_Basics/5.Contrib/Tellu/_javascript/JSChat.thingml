import "../PIMChat.thingml"

thing fragment JSChatClient includes ChatClient {

		
	statechart behavior init Idle {
		
		state Idle {
			
			transition -> Chatting 
			action chatRoom!chat_start("Room1")
		}
		
		state Chatting {
			
			internal event chat : chatRoom?chat
			guard messages < 4
			action do
				chatRoom!chat("Chat")
				messages = messages + 1
				'console.log( "Client: message no:"+' & messages  & '+", "+' & chat.msg & '+"\n");'
			end
			
			transition -> Bye
			event chat : chatRoom?chat
			guard messages == 4
			action chatRoom!chat_stop()
		}
	
		state Bye {
			on entry print "Bye.\n"
		}
		
	}
}

thing fragment JSChatServer includes ChatServer {

		
	statechart behavior init Idle {
		
		state Idle {
			internal event chatRoom?chat_start
			action 
			do
				chatRoom!chat("Welcome!")
				participants = participants + 1
				messages = messages + 1
				'console.log( "Server: Entering Room, participants in chat: "+' & participants & '+"\n");'
			end
			
			internal event chat : chatRoom?chat
			action do 
				chatRoom!chat(chat.msg)
				messages = messages + 1
				'console.log( "Server: message no:"+' & messages  & '+", message: "+' & chat.msg & '+"\n");'
			end
			
			internal event chat : chatRoom?chat_stop
			action
			do 
				chatRoom!chat_stop()
				participants = participants - 1
				'console.log( "Server: Leaving Room, participants in chat: "+' & participants & '+"\n");'
			end
		}
	}
}

configuration ChatServer {
	instance client1 : JSChatClient
	instance client2 : JSChatClient
	instance server : JSChatServer
	
	connector client1.chatRoom => server.chatRoom
	connector client2.chatRoom => server.chatRoom
}