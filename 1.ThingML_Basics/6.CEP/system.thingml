import "sharedMsgs.thingml"

thing fragment AlertSystemMsgs {
    message windowOpenWithPerson(); 
    message throwAlert();   
}

thing AlertSystem includes windowOpenMsgs, PresenceDetectorMsgs, heatingMsgs, AlertSystemMsgs {
    required port rcvPort {
        receives cepWindowOpen, cepPersonIsPresent, windowOpenWithPerson, throwAlert, cepHeatingStatus 
    }
    
    provided port sendPort {
        sends windowOpenWithPerson, throwAlert    
    }
    
    operator filterWindowOpen(m : cepWindowOpen) : Boolean do
        return m.v
    end
    
    stream joinWindowPresenceDetectors do
        from [ w : [rcvPort?cepWindowOpen]::filter(filterWindowOpen(w)) & rcvPort?cepPersonIsPresent -> windowOpenWithPerson()]
        action sendPort!windowOpenWithPerson()
    end
    
    stream joinWPHeating do
        from [ rcvPort?windowOpenWithPerson & rcvPort?cepHeatingStatus ->  throwAlert()]
        action sendPort!throwAlert()
    end 
    
    statechart AlertSystem init Idle {
        state Idle {
            internal
            event rcvPort?throwAlert
            action print "ALERT!! ALERT!! ALERT!!"   
        }    
    }   
    
}
